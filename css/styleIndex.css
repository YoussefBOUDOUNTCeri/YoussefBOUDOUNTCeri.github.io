body,
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Montserrat", sans-serif;
}

body {
  background-color: black;
  color: white; /* pour que le texte soit visible sur un fond noir */
}

.w3-row-padding img {
  margin-bottom: 12px;
}

/* Set the width of the sidebar to 120px */
.w3-sidebar {
  width: 120px;
  background: #222;
}

#main {
  margin-left: 120px;
}

@media only screen and (max-width: 600px) {
  #main {
    margin-left: 0;
  }
}

.html,
.css,
.js {
  background: radial-gradient(closest-side, black 79%, white 80% 100%),
    conic-gradient(white calc(var(--progress-value) * 1%), black 0 100%);
  border: 2px solid white;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
span {
  color: white;
}

/*******************************************************
Circle Progress Bar
*******************************************************/
.circles {
  display: flex;
  justify-content: space-between; /* ou space-around */
  width: 90%; /* ajustez selon vos besoins */
  margin: 0 auto; /* centre le conteneur sur la page */
}

@property --progress-value {
  syntax: "<integer>";
  inherits: false;
  initial-value: 0;
}

@keyframes html-progress {
  to {
    --progress-value: 99;
  }
}

@keyframes css-progress {
  to {
    --progress-value: 95;
  }
}

@keyframes js-progress {
  to {
    --progress-value: 90;
  }
}

@keyframes php-progress {
  to {
    --progress-value: 75;
  }
}

@keyframes sql-progress {
  to {
    --progress-value: 45;
  }
}

@keyframes python-progress {
  to {
    --progress-value: 90;
  }
}

@keyframes java-progress {
  to {
    --progress-value: 79;
  }
}

@keyframes cpp-progress {
  to {
    --progress-value: 70;
  }
}

@keyframes c-progress {
  to {
    --progress-value: 50;
  }
}

.progress-bar {
  width: 100px;
  height: 100px;
  border-radius: 50%;

  /* to center the percentage value */
  display: flex;
  justify-content: center;
  align-items: center;
}

.progress-bar::before {
  counter-reset: percentage var(--progress-value);
  content: counter(percentage) "%";
  color: white;
}

.html {
  background: radial-gradient(
      closest-side,
      black 79%,
      transparent 80% 100%,
      black 0
    ),
    conic-gradient(white calc(var(--progress-value) * 1%), black 0);
  animation: html-progress 2s 1 forwards;
}

.html::before {
  animation: html-progress 2s 1 forwards;
}

.css {
  background: radial-gradient(
      closest-side,
      black 79%,
      transparent 80% 100%,
      black 0
    ),
    conic-gradient(white calc(var(--progress-value) * 1%), black 0);
  animation: css-progress 2s 1 forwards;
}

.css::before {
  animation: css-progress 2s 1 forwards;
}

.js {
  background: radial-gradient(
      closest-side,
      black 79%,
      transparent 80% 100%,
      black 0
    ),
    conic-gradient(white calc(var(--progress-value) * 1%), black 0);
  animation: js-progress 2s 1 forwards;
}

.js::before {
  animation: js-progress 2s 1 forwards;
}

.php {
  background: radial-gradient(
      closest-side,
      black 79%,
      transparent 80% 100%,
      black 0
    ),
    conic-gradient(white calc(var(--progress-value) * 1%), black 0);
  animation: php-progress 2s 1 forwards;
}

.php::before {
  animation: php-progress 2s 1 forwards;
}

.sql {
  background: radial-gradient(
      closest-side,
      black 79%,
      transparent 80% 100%,
      black 0
    ),
    conic-gradient(white calc(var(--progress-value) * 1%), black 0);
  animation: sql-progress 2s 1 forwards;
}

.sql::before {
  animation: sql-progress 2s 1 forwards;
}

.python {
  background: radial-gradient(
      closest-side,
      black 79%,
      transparent 80% 100%,
      black 0
    ),
    conic-gradient(white calc(var(--progress-value) * 1%), black 0);
  animation: python-progress 2s 1 forwards;
}

.python::before {
  animation: python-progress 2s 1 forwards;
}

.java {
  background: radial-gradient(
      closest-side,
      black 79%,
      transparent 80% 100%,
      black 0
    ),
    conic-gradient(white calc(var(--progress-value) * 1%), black 0);
  animation: java-progress 2s 1 forwards;
}

.java::before {
  animation: java-progress 2s 1 forwards;
}

.cpp {
  background: radial-gradient(
      closest-side,
      black 79%,
      transparent 80% 100%,
      black 0
    ),
    conic-gradient(white calc(var(--progress-value) * 1%), black 0);
  animation: cpp-progress 2s 1 forwards;
}

.cpp::before {
  animation: cpp-progress 2s 1 forwards;
}

.c {
  background: radial-gradient(
      closest-side,
      black 79%,
      transparent 80% 100%,
      black 0
    ),
    conic-gradient(white calc(var(--progress-value) * 1%), black 0);
  animation: c-progress 2s 1 forwards;
}

.c::before {
  animation: c-progress 2s 1 forwards;
}

h2 {
  text-align: center;
}

progress {
  visibility: hidden;
  width: 0;
  height: 0;
}

.faicons {
  font-size: 2em; /* Ajout de cette ligne pour une taille fixe */
  width: 2em; /* Ajout de cette ligne pour une largeur fixe */
  height: 2em; /* Ajout de cette ligne pour une hauteur fixe */
  line-height: 2em; /* Pour centrer verticalement l'ic么ne */
  text-align: center; /* Pour centrer horizontalement l'ic么ne */
  color: white;
  margin-left: 10px;
  margin-right: 10px;
}

.fabicons {
  color: white;
  margin-left: 10px;
  margin-right: 10px;
  width: 2em; /* Ajout de cette ligne pour une largeur fixe */
  height: 2em; /* Ajout de cette ligne pour une hauteur fixe */
  line-height: 2em; /* Pour centrer verticalement l'ic么ne */
  text-align: center; /* Pour centrer horizontalement l'ic么ne */
}


a, button {
  transition: all 0.3s ease-in-out;
}

a:hover, button:hover {
  background-color: #444;
  color: #fff;
}

.fade-in {
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}

.fade-in.visible {
  opacity: 1;
}

@keyframes slideIn {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

.slide-in {
  animation: slideIn 0.5s forwards;
}


html {
  scroll-behavior: smooth;
}


.card {
  transition: transform 0.3s;
}

.card:hover {
  transform: scale(1.05);
}


body {
  font-family: 'Montserrat', sans-serif;
}

h1, h2, h3 {
  font-family: 'Roboto', sans-serif;
}

.card img {
  transition: transform 0.3s ease;
}


@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-30px);
  }
  60% {
    transform: translateY(-15px);
  }
}

.faicons:hover, .fabicons:hover {
  animation: bounce 1s;
}


h1, h2, h3, a, button {
  position: relative;
  display: inline-block;
}

h1::after, h2::after, h3::after, a::after, button::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 0;
  height: 2px;
  background-color: #fff;
  transition: width 0.3s ease;
}

button:hover::after  {
  width: 100%;
}
 

.card {
  transition: transform 0.3s, box-shadow 0.3s;
  border: 1px solid white; /* pour ajouter un contour blanc */
}

.card:hover {
  transform: scale(1.05);
  box-shadow: 0 8px 16px rgba(255, 255, 255, 0.3);
}


.text-animate {
  display: inline-block;
  position: relative;
}

.text-animate::before {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 50%;
  width: 0;
  height: 3px;
  background-color: white;
  transition: width 0.3s ease, left 0.3s ease;
}

.text-animate:hover::before {
  width: 100%;
  left: 0;
}


.parallax {
  background-attachment: fixed;
  background-size: cover;
}

.parallax:hover {
  background-position: center;
}

.faicons,
.fabicons {
  display: inline-block;
  transition: transform 0.3s ease-in-out;
}

.faicons:hover,
.fabicons:hover {
  transform: translateY(-10px) rotate(10deg);
}